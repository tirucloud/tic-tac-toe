name: Build,Analyze,scan
on:
  push:
    branches:
      - main
jobs:
  build-analyze-scan:
    name: Build
    runs-on: [tiru]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Build and analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
          scannerVersion: 7.3.0.5189
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: npm install dependency
        run: npm install
      - name: Trivy file scan
        run: trivy fs . > trivyfs.txt
      - name: Docker Build and push
        run: |
          docker build -t tic-tac-toe .
          docker tag tic-tac-toe tirucloud/tic-tac-toe:latest
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push tirucloud/tic-tac-toe:latest
        env:
          DOCKER_CLI_ACI: 1
      - name: Image scan
        run: trivy image tirucloud/tic-tac-toe:latest > trivyimage.txt
  deploy_to_container:
   needs: build-analyze-scan
   runs-on: [tiru]
   steps:
      - name: stop contianer
        run: docker rm -f ttgamecon || true
      - name: docker pull image
        run: docker pull tirucloud/tic-tac-toe:latest
      - name: Image scan
        run: trivy image tirucloud/tic-tac-toe:latest > trivyimagedeploy.txt
      - name: Deploy to container
        run: docker run -d --name ttgamecon -p 3000:3000 tirucloud/tic-tac-toe:latest
      
  deploy_to_kubernetes:
    runs-on: [tiru]
    needs: deploy_to_container
    env:
     AWS_REGION: us-east-1
     CLUSTER_NAME: tiru-cluster
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: latest
    - name: Configure AWS and Kubeconfig
      env:
       AWS_REGION: us-east-1
       CLUSTER_NAME: tiru-cluster
      run: |
       mkdir -p ~/.kube
       aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
       kubectl get nodes
      
    - name: Deploy to EKS
      run: |
        kubectl apply -f deploy-service.yml
